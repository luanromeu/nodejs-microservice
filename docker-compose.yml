version: '3'
services:
  api-gateway:
    build:
      context: .
      dockerfile: development.Dockerfile
    image: empresas-backend/api-gateway:dev
    deploy:
      replicas: 1
    restart: on-failure
    environment:
      - VIRTUAL_HOST=api-gateway.app.com
    ports:
      - 3000:3000
    networks:
        - dreamobs-network
    links:
        - api-auth
    volumes:
      - ./api-gateway:/app/src

  api-auth:
    build:
      context: .
      dockerfile: development.Dockerfile
    image: empresas-backend/api-auth:dev
    deploy:
      replicas: 1
    command: bash -c "/usr/local/bin/wait.sh && /usr/local/bin/start.sh"
    restart: on-failure
    depends_on: 
      - mysql
    links:
      - mysql
    ports:
      - 3001:3001
    networks:
        - dreamobs-network
    volumes:
      - ./api-auth:/app/src
      - ./start.sh:/usr/local/bin/start.sh
      - ./wait.sh:/usr/local/bin/wait.sh

  api-companies:
      build:
        context: .
        dockerfile: development.Dockerfile
      image: empresas-backend/api-comapnies:dev
      deploy:
        replicas: 1
      command: bash -c "/usr/local/bin/wait.sh && /usr/local/bin/start.sh"
      restart: on-failure
      depends_on: 
        - mysql
      links:
        - mysql
      ports:
        - 3002:3002
      networks:
        - dreamobs-network
      volumes:
        - ./api-companies:/app/src
        - ./start.sh:/usr/local/bin/start.sh
        - ./wait.sh:/usr/local/bin/wait.sh

  mysql:
    image: mysql:5.7
    ports:
      - 3306:3306
    networks:
      - dreamobs-network
    restart: always
    command: --init-file /data/application/init.sql
    volumes:
        - ./api-auth/init.sql:/data/application/init.sql
    environment:
        MYSQL_ROOT_USER: root
        MYSQL_ROOT_PASSWORD: secret
        MYSQL_DATABASE: dev
        MYSQL_USER: dev
        MYSQL_PASSWORD: dev
    healthcheck:
        test: "mysql --user=dev --password=dev --execute \"SHOW DATABASES;\""
        timeout: 20s
        retries: 20

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    networks:
      - dreamobs-network
    links:
      - mysql
    ports:
      - 4000:80
    environment:
      - PMA_ARBITRARY=1
         
  portainer:
     image: portainer/portainer
     command: -H unix:///var/run/docker.sock
     restart: always
     networks:
      - dreamobs-network
     ports:
       - 9000:9000
       - 8000:8000
     volumes:
       - /var/run/docker.sock:/var/run/docker.sock
       - portainer_data:/data
volumes:
  portainer_data:

networks:
  dreamobs-network:
    driver: overlay





 
